// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LayerNorm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LayerNorm::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LayerNorm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<78> LayerNorm::ap_ST_fsm_state1 = "1";
const sc_lv<78> LayerNorm::ap_ST_fsm_state2 = "10";
const sc_lv<78> LayerNorm::ap_ST_fsm_state3 = "100";
const sc_lv<78> LayerNorm::ap_ST_fsm_state4 = "1000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state5 = "10000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state6 = "100000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state7 = "1000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state8 = "10000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state9 = "100000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state10 = "1000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state11 = "10000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state12 = "100000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<78> LayerNorm::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> LayerNorm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> LayerNorm::ap_const_lv32_4 = "100";
const sc_lv<32> LayerNorm::ap_const_lv32_B = "1011";
const sc_lv<32> LayerNorm::ap_const_lv32_22 = "100010";
const sc_lv<32> LayerNorm::ap_const_lv32_29 = "101001";
const sc_lv<32> LayerNorm::ap_const_lv32_3E = "111110";
const sc_lv<32> LayerNorm::ap_const_lv32_45 = "1000101";
const sc_lv<32> LayerNorm::ap_const_lv32_3F = "111111";
const sc_lv<32> LayerNorm::ap_const_lv32_46 = "1000110";
const sc_lv<32> LayerNorm::ap_const_lv32_48 = "1001000";
const sc_lv<32> LayerNorm::ap_const_lv32_4D = "1001101";
const int LayerNorm::C_S_AXI_DATA_WIDTH = "100000";
const int LayerNorm::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int LayerNorm::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int LayerNorm::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int LayerNorm::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> LayerNorm::ap_const_lv32_1 = "1";
const sc_lv<32> LayerNorm::ap_const_lv32_2 = "10";
const sc_lv<1> LayerNorm::ap_const_lv1_0 = "0";
const sc_lv<32> LayerNorm::ap_const_lv32_3 = "11";
const sc_lv<1> LayerNorm::ap_const_lv1_1 = "1";
const sc_lv<32> LayerNorm::ap_const_lv32_C = "1100";
const sc_lv<32> LayerNorm::ap_const_lv32_20 = "100000";
const sc_lv<32> LayerNorm::ap_const_lv32_21 = "100001";
const sc_lv<32> LayerNorm::ap_const_lv32_28 = "101000";
const sc_lv<32> LayerNorm::ap_const_lv32_2A = "101010";
const sc_lv<32> LayerNorm::ap_const_lv32_47 = "1000111";
const sc_lv<16> LayerNorm::ap_const_lv16_0 = "0000000000000000";
const sc_lv<48> LayerNorm::ap_const_lv48_0 = "000000000000000000000000000000000000000000000000";
const sc_lv<3> LayerNorm::ap_const_lv3_0 = "000";
const sc_lv<2> LayerNorm::ap_const_lv2_0 = "00";
const sc_lv<4> LayerNorm::ap_const_lv4_0 = "0000";
const bool LayerNorm::ap_const_boolean_0 = false;
const sc_lv<2> LayerNorm::ap_const_lv2_3 = "11";
const sc_lv<32> LayerNorm::ap_const_lv32_1F = "11111";
const sc_lv<16> LayerNorm::ap_const_lv16_1 = "1";
const sc_lv<8> LayerNorm::ap_const_lv8_0 = "00000000";
const sc_lv<32> LayerNorm::ap_const_lv32_8 = "1000";
const sc_lv<32> LayerNorm::ap_const_lv32_17 = "10111";
const sc_lv<32> LayerNorm::ap_const_lv32_2B = "101011";
const sc_lv<32> LayerNorm::ap_const_lv32_2C = "101100";
const sc_lv<32> LayerNorm::ap_const_lv32_2D = "101101";
const sc_lv<32> LayerNorm::ap_const_lv32_2E = "101110";
const sc_lv<32> LayerNorm::ap_const_lv32_2F = "101111";
const sc_lv<32> LayerNorm::ap_const_lv32_30 = "110000";
const sc_lv<32> LayerNorm::ap_const_lv32_31 = "110001";
const sc_lv<32> LayerNorm::ap_const_lv32_32 = "110010";
const sc_lv<32> LayerNorm::ap_const_lv32_33 = "110011";
const sc_lv<32> LayerNorm::ap_const_lv32_34 = "110100";
const sc_lv<32> LayerNorm::ap_const_lv32_35 = "110101";
const sc_lv<32> LayerNorm::ap_const_lv32_36 = "110110";
const sc_lv<32> LayerNorm::ap_const_lv32_37 = "110111";
const sc_lv<32> LayerNorm::ap_const_lv32_38 = "111000";
const sc_lv<32> LayerNorm::ap_const_lv32_39 = "111001";
const sc_lv<32> LayerNorm::ap_const_lv32_3A = "111010";
const sc_lv<32> LayerNorm::ap_const_lv32_3B = "111011";
const sc_lv<32> LayerNorm::ap_const_lv32_3C = "111100";
const sc_lv<32> LayerNorm::ap_const_lv32_3D = "111101";
const sc_lv<32> LayerNorm::ap_const_lv32_40 = "1000000";
const sc_lv<32> LayerNorm::ap_const_lv32_41 = "1000001";
const sc_lv<32> LayerNorm::ap_const_lv32_42 = "1000010";
const sc_lv<32> LayerNorm::ap_const_lv32_43 = "1000011";
const sc_lv<32> LayerNorm::ap_const_lv32_44 = "1000100";
const bool LayerNorm::ap_const_boolean_1 = true;

LayerNorm::LayerNorm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    LayerNorm_AXILiteS_s_axi_U = new LayerNorm_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("LayerNorm_AXILiteS_s_axi_U");
    LayerNorm_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    LayerNorm_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    LayerNorm_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    LayerNorm_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    LayerNorm_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    LayerNorm_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    LayerNorm_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    LayerNorm_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    LayerNorm_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    LayerNorm_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    LayerNorm_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    LayerNorm_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    LayerNorm_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    LayerNorm_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    LayerNorm_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    LayerNorm_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    LayerNorm_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    LayerNorm_AXILiteS_s_axi_U->ACLK(ap_clk);
    LayerNorm_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    LayerNorm_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    LayerNorm_AXILiteS_s_axi_U->ap_start(ap_start);
    LayerNorm_AXILiteS_s_axi_U->interrupt(interrupt);
    LayerNorm_AXILiteS_s_axi_U->ap_ready(ap_ready);
    LayerNorm_AXILiteS_s_axi_U->ap_done(ap_done);
    LayerNorm_AXILiteS_s_axi_U->ap_idle(ap_idle);
    LayerNorm_AXILiteS_s_axi_U->num_features_V(num_features_V);
    LayerNorm_AXILiteS_s_axi_U->height_V(height_V);
    LayerNorm_AXILiteS_s_axi_U->width_V(width_V);
    LayerNorm_AXILiteS_s_axi_U->in_data_V(in_data_V);
    LayerNorm_AXILiteS_s_axi_U->out_data_V(out_data_V);
    LayerNorm_AXILiteS_s_axi_U->gamma_V(gamma_V);
    LayerNorm_AXILiteS_s_axi_U->beta_V(beta_V);
    LayerNorm_gmem_m_axi_U = new LayerNorm_gmem_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("LayerNorm_gmem_m_axi_U");
    LayerNorm_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    LayerNorm_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    LayerNorm_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    LayerNorm_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    LayerNorm_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    LayerNorm_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    LayerNorm_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    LayerNorm_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    LayerNorm_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    LayerNorm_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    LayerNorm_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    LayerNorm_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    LayerNorm_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    LayerNorm_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    LayerNorm_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    LayerNorm_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    LayerNorm_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    LayerNorm_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    LayerNorm_gmem_m_axi_U->WID(m_axi_gmem_WID);
    LayerNorm_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    LayerNorm_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    LayerNorm_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    LayerNorm_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    LayerNorm_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    LayerNorm_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    LayerNorm_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    LayerNorm_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    LayerNorm_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    LayerNorm_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    LayerNorm_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    LayerNorm_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    LayerNorm_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    LayerNorm_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    LayerNorm_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    LayerNorm_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    LayerNorm_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    LayerNorm_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    LayerNorm_gmem_m_axi_U->RID(m_axi_gmem_RID);
    LayerNorm_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    LayerNorm_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    LayerNorm_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    LayerNorm_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    LayerNorm_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    LayerNorm_gmem_m_axi_U->BID(m_axi_gmem_BID);
    LayerNorm_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    LayerNorm_gmem_m_axi_U->ACLK(ap_clk);
    LayerNorm_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    LayerNorm_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    LayerNorm_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    LayerNorm_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    LayerNorm_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    LayerNorm_gmem_m_axi_U->I_ARID(ap_var_for_const1);
    LayerNorm_gmem_m_axi_U->I_ARLEN(ap_var_for_const2);
    LayerNorm_gmem_m_axi_U->I_ARSIZE(ap_var_for_const3);
    LayerNorm_gmem_m_axi_U->I_ARLOCK(ap_var_for_const4);
    LayerNorm_gmem_m_axi_U->I_ARCACHE(ap_var_for_const5);
    LayerNorm_gmem_m_axi_U->I_ARQOS(ap_var_for_const5);
    LayerNorm_gmem_m_axi_U->I_ARPROT(ap_var_for_const3);
    LayerNorm_gmem_m_axi_U->I_ARUSER(ap_var_for_const1);
    LayerNorm_gmem_m_axi_U->I_ARBURST(ap_var_for_const4);
    LayerNorm_gmem_m_axi_U->I_ARREGION(ap_var_for_const5);
    LayerNorm_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    LayerNorm_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    LayerNorm_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    LayerNorm_gmem_m_axi_U->I_RID(gmem_RID);
    LayerNorm_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    LayerNorm_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    LayerNorm_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    LayerNorm_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    LayerNorm_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    LayerNorm_gmem_m_axi_U->I_AWADDR(gmem_addr_4_reg_886);
    LayerNorm_gmem_m_axi_U->I_AWID(ap_var_for_const1);
    LayerNorm_gmem_m_axi_U->I_AWLEN(ap_var_for_const2);
    LayerNorm_gmem_m_axi_U->I_AWSIZE(ap_var_for_const3);
    LayerNorm_gmem_m_axi_U->I_AWLOCK(ap_var_for_const4);
    LayerNorm_gmem_m_axi_U->I_AWCACHE(ap_var_for_const5);
    LayerNorm_gmem_m_axi_U->I_AWQOS(ap_var_for_const5);
    LayerNorm_gmem_m_axi_U->I_AWPROT(ap_var_for_const3);
    LayerNorm_gmem_m_axi_U->I_AWUSER(ap_var_for_const1);
    LayerNorm_gmem_m_axi_U->I_AWBURST(ap_var_for_const4);
    LayerNorm_gmem_m_axi_U->I_AWREGION(ap_var_for_const5);
    LayerNorm_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    LayerNorm_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    LayerNorm_gmem_m_axi_U->I_WDATA(tmp_28_reg_927);
    LayerNorm_gmem_m_axi_U->I_WID(ap_var_for_const1);
    LayerNorm_gmem_m_axi_U->I_WUSER(ap_var_for_const1);
    LayerNorm_gmem_m_axi_U->I_WLAST(ap_var_for_const6);
    LayerNorm_gmem_m_axi_U->I_WSTRB(ap_var_for_const7);
    LayerNorm_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    LayerNorm_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    LayerNorm_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    LayerNorm_gmem_m_axi_U->I_BID(gmem_BID);
    LayerNorm_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    grp_sqrt_fixed_17_9_s_fu_312 = new sqrt_fixed_17_9_s("grp_sqrt_fixed_17_9_s_fu_312");
    grp_sqrt_fixed_17_9_s_fu_312->ap_clk(ap_clk);
    grp_sqrt_fixed_17_9_s_fu_312->ap_rst(ap_rst_n_inv);
    grp_sqrt_fixed_17_9_s_fu_312->x_V(variance_V_reg_845);
    grp_sqrt_fixed_17_9_s_fu_312->ap_return(grp_sqrt_fixed_17_9_s_fu_312_ap_return);
    LayerNorm_sdiv_17bkb_U2 = new LayerNorm_sdiv_17bkb<1,21,17,17,16>("LayerNorm_sdiv_17bkb_U2");
    LayerNorm_sdiv_17bkb_U2->clk(ap_clk);
    LayerNorm_sdiv_17bkb_U2->reset(ap_rst_n_inv);
    LayerNorm_sdiv_17bkb_U2->start(grp_fu_473_ap_start);
    LayerNorm_sdiv_17bkb_U2->done(grp_fu_473_ap_done);
    LayerNorm_sdiv_17bkb_U2->din0(grp_fu_473_p0);
    LayerNorm_sdiv_17bkb_U2->din1(p_tr4_reg_767);
    LayerNorm_sdiv_17bkb_U2->ce(ap_var_for_const0);
    LayerNorm_sdiv_17bkb_U2->dout(grp_fu_473_p2);
    LayerNorm_sdiv_17bkb_U3 = new LayerNorm_sdiv_17bkb<1,21,17,17,16>("LayerNorm_sdiv_17bkb_U3");
    LayerNorm_sdiv_17bkb_U3->clk(ap_clk);
    LayerNorm_sdiv_17bkb_U3->reset(ap_rst_n_inv);
    LayerNorm_sdiv_17bkb_U3->start(grp_fu_482_ap_start);
    LayerNorm_sdiv_17bkb_U3->done(grp_fu_482_ap_done);
    LayerNorm_sdiv_17bkb_U3->din0(grp_fu_482_p0);
    LayerNorm_sdiv_17bkb_U3->din1(p_tr4_reg_767);
    LayerNorm_sdiv_17bkb_U3->ce(ap_var_for_const0);
    LayerNorm_sdiv_17bkb_U3->dout(grp_fu_482_p2);
    LayerNorm_sdiv_25cud_U4 = new LayerNorm_sdiv_25cud<1,29,25,14,16>("LayerNorm_sdiv_25cud_U4");
    LayerNorm_sdiv_25cud_U4->clk(ap_clk);
    LayerNorm_sdiv_25cud_U4->reset(ap_rst_n_inv);
    LayerNorm_sdiv_25cud_U4->start(grp_fu_653_ap_start);
    LayerNorm_sdiv_25cud_U4->done(grp_fu_653_ap_done);
    LayerNorm_sdiv_25cud_U4->din0(grp_fu_653_p0);
    LayerNorm_sdiv_25cud_U4->din1(grp_fu_653_p1);
    LayerNorm_sdiv_25cud_U4->ce(grp_fu_653_ce);
    LayerNorm_sdiv_25cud_U4->dout(grp_fu_653_p2);
    LayerNorm_mul_muldEe_U5 = new LayerNorm_mul_muldEe<1,1,16,16,32>("LayerNorm_mul_muldEe_U5");
    LayerNorm_mul_muldEe_U5->din0(ret_V_fu_685_p0);
    LayerNorm_mul_muldEe_U5->din1(ret_V_fu_685_p1);
    LayerNorm_mul_muldEe_U5->dout(ret_V_fu_685_p2);
    LayerNorm_mac_muleOg_U6 = new LayerNorm_mac_muleOg<1,1,16,16,24,24>("LayerNorm_mac_muleOg_U6");
    LayerNorm_mac_muleOg_U6->din0(grp_fu_692_p0);
    LayerNorm_mac_muleOg_U6->din1(grp_fu_692_p1);
    LayerNorm_mac_muleOg_U6->din2(grp_fu_692_p2);
    LayerNorm_mac_muleOg_U6->dout(grp_fu_692_p3);
    LayerNorm_mac_mulfYi_U7 = new LayerNorm_mac_mulfYi<1,1,16,16,24,24>("LayerNorm_mac_mulfYi_U7");
    LayerNorm_mac_mulfYi_U7->din0(grp_fu_701_p0);
    LayerNorm_mac_mulfYi_U7->din1(grp_fu_701_p1);
    LayerNorm_mac_mulfYi_U7->din2(grp_fu_701_p2);
    LayerNorm_mac_mulfYi_U7->dout(grp_fu_701_p3);
    LayerNorm_mac_muleOg_U8 = new LayerNorm_mac_muleOg<1,1,16,16,24,24>("LayerNorm_mac_muleOg_U8");
    LayerNorm_mac_muleOg_U8->din0(gmem_addr_2_read_reg_912);
    LayerNorm_mac_muleOg_U8->din1(normalized_V_fu_659_p1);
    LayerNorm_mac_muleOg_U8->din2(grp_fu_710_p2);
    LayerNorm_mac_muleOg_U8->dout(grp_fu_710_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state63_io);
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );
    sensitive << ( ap_sig_ioackin_gmem_AWREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_393_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_393_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem_ARREADY);
    sensitive << ( gmem_ARREADY );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_AWREADY);
    sensitive << ( gmem_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_WREADY);
    sensitive << ( gmem_WREADY );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_beta_V8_sum_cast_fu_609_p1);
    sensitive << ( beta_V8_sum_fu_604_p2 );

    SC_METHOD(thread_beta_V8_sum_fu_604_p2);
    sensitive << ( tmp_34_cast_reg_735 );
    sensitive << ( lhs_V_3_cast_fu_556_p1 );

    SC_METHOD(thread_c_1_fu_550_p2);
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_c_fu_434_p2);
    sensitive << ( i_op_assign_2_reg_268 );

    SC_METHOD(thread_exitcond1_fu_545_p2);
    sensitive << ( num_features_V_read_reg_729 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_exitcond2_fu_408_p2);
    sensitive << ( width_V_read_reg_719 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_op_assign_1_reg_233 );

    SC_METHOD(thread_exitcond3_fu_393_p2);
    sensitive << ( height_V_read_reg_724 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_op_assign_reg_210 );

    SC_METHOD(thread_exitcond_fu_429_p2);
    sensitive << ( num_features_V_read_reg_729 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_op_assign_2_reg_268 );

    SC_METHOD(thread_gamma_V6_sum_cast_fu_594_p1);
    sensitive << ( gamma_V6_sum_fu_589_p2 );

    SC_METHOD(thread_gamma_V6_sum_fu_589_p2);
    sensitive << ( tmp_36_cast_reg_740 );
    sensitive << ( lhs_V_3_cast_fu_556_p1 );

    SC_METHOD(thread_gmem_ARADDR);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( gmem_addr_reg_813 );
    sensitive << ( gmem_addr_1_reg_868 );
    sensitive << ( gmem_addr_2_reg_874 );
    sensitive << ( gmem_addr_3_reg_880 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_gmem_blk_n_AR);
    sensitive << ( m_axi_gmem_ARREADY );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_gmem_blk_n_AW);
    sensitive << ( m_axi_gmem_AWREADY );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_gmem_blk_n_B);
    sensitive << ( m_axi_gmem_BVALID );
    sensitive << ( ap_CS_fsm_state78 );

    SC_METHOD(thread_gmem_blk_n_R);
    sensitive << ( m_axi_gmem_RVALID );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );

    SC_METHOD(thread_gmem_blk_n_W);
    sensitive << ( m_axi_gmem_WREADY );
    sensitive << ( ap_CS_fsm_state73 );

    SC_METHOD(thread_grp_fu_473_ap_start);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_429_p2 );

    SC_METHOD(thread_grp_fu_473_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_4_reg_244 );

    SC_METHOD(thread_grp_fu_482_ap_start);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_429_p2 );

    SC_METHOD(thread_grp_fu_482_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_6_reg_256 );

    SC_METHOD(thread_grp_fu_653_ap_start);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_653_ce);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );

    SC_METHOD(thread_grp_fu_653_p0);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ret_V_10_fu_637_p2 );

    SC_METHOD(thread_grp_fu_653_p1);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( grp_fu_653_p10 );

    SC_METHOD(thread_grp_fu_653_p10);
    sensitive << ( agg_result_V_i_reg_892 );

    SC_METHOD(thread_grp_fu_692_p0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_26_fu_492_p1 );

    SC_METHOD(thread_grp_fu_692_p1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_26_fu_492_p1 );

    SC_METHOD(thread_grp_fu_692_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( p_Val2_6_reg_256 );

    SC_METHOD(thread_grp_fu_701_p0);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( tmp_fu_516_p1 );

    SC_METHOD(thread_grp_fu_701_p1);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( tmp_fu_516_p1 );

    SC_METHOD(thread_grp_fu_701_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( tmp_48_fu_520_p1 );

    SC_METHOD(thread_grp_fu_710_p2);
    sensitive << ( p_Val2_13_reg_922 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_h_fu_398_p2);
    sensitive << ( i_op_assign_reg_210 );

    SC_METHOD(thread_i_op_assign_1_cast3_fu_404_p1);
    sensitive << ( i_op_assign_1_reg_233 );

    SC_METHOD(thread_in_data_V2_sum9_cast_fu_579_p1);
    sensitive << ( in_data_V2_sum9_fu_574_p2 );

    SC_METHOD(thread_in_data_V2_sum9_fu_574_p2);
    sensitive << ( tmp_39_cast_reg_750 );
    sensitive << ( tmp_24_cast_cast_fu_570_p1 );

    SC_METHOD(thread_in_data_V2_sum_cast_fu_459_p1);
    sensitive << ( in_data_V2_sum_fu_454_p2 );

    SC_METHOD(thread_in_data_V2_sum_fu_454_p2);
    sensitive << ( tmp_39_cast_reg_750 );
    sensitive << ( tmp_20_cast_cast_fu_450_p1 );

    SC_METHOD(thread_lhs_V_3_cast_fu_556_p1);
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_lhs_V_3_fu_634_p1);
    sensitive << ( x_V_1_reg_897 );

    SC_METHOD(thread_next_mul1_fu_388_p2);
    sensitive << ( rhs_V_reg_756 );
    sensitive << ( ret_V_3_reg_221 );

    SC_METHOD(thread_next_mul2_fu_560_p2);
    sensitive << ( rhs_V_1_cast_reg_761 );
    sensitive << ( ret_V_5_reg_301 );

    SC_METHOD(thread_next_mul_fu_440_p2);
    sensitive << ( rhs_V_1_cast_reg_761 );
    sensitive << ( ret_V_2_reg_279 );

    SC_METHOD(thread_normalized_V_fu_659_p1);
    sensitive << ( tmp_27_reg_917 );

    SC_METHOD(thread_out_data_V4_sum_cast_fu_624_p1);
    sensitive << ( out_data_V4_sum_fu_619_p2 );

    SC_METHOD(thread_out_data_V4_sum_fu_619_p2);
    sensitive << ( tmp_38_cast_reg_745 );
    sensitive << ( tmp_24_cast_cast_fu_570_p1 );

    SC_METHOD(thread_p_tr4_fu_384_p1);
    sensitive << ( num_features_V );

    SC_METHOD(thread_r_V_fu_512_p1);
    sensitive << ( grp_fu_473_p2 );

    SC_METHOD(thread_ret_V_10_fu_637_p2);
    sensitive << ( rhs_V_1_reg_850 );
    sensitive << ( lhs_V_3_fu_634_p1 );

    SC_METHOD(thread_ret_V_fu_685_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ret_V_fu_685_p00 );

    SC_METHOD(thread_ret_V_fu_685_p00);
    sensitive << ( width_V );

    SC_METHOD(thread_ret_V_fu_685_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ret_V_fu_685_p10 );

    SC_METHOD(thread_ret_V_fu_685_p10);
    sensitive << ( height_V );

    SC_METHOD(thread_rhs_V_1_cast_fu_381_p1);
    sensitive << ( ret_V_fu_685_p2 );

    SC_METHOD(thread_rhs_V_1_fu_541_p1);
    sensitive << ( r_V_fu_512_p1 );

    SC_METHOD(thread_rhs_V_fu_373_p1);
    sensitive << ( width_V );

    SC_METHOD(thread_sum_V_fu_487_p2);
    sensitive << ( x_V_reg_829 );
    sensitive << ( p_Val2_4_reg_244 );

    SC_METHOD(thread_tmp_19_cast_fu_425_p1);
    sensitive << ( tmp_19_fu_419_p2 );

    SC_METHOD(thread_tmp_19_fu_419_p2);
    sensitive << ( ret_V_3_reg_221 );
    sensitive << ( i_op_assign_1_cast3_fu_404_p1 );

    SC_METHOD(thread_tmp_20_cast_cast_fu_450_p1);
    sensitive << ( tmp_20_fu_445_p2 );

    SC_METHOD(thread_tmp_20_fu_445_p2);
    sensitive << ( tmp_19_cast_reg_794 );
    sensitive << ( ret_V_2_reg_279 );

    SC_METHOD(thread_tmp_24_cast_cast_fu_570_p1);
    sensitive << ( tmp_24_fu_565_p2 );

    SC_METHOD(thread_tmp_24_fu_565_p2);
    sensitive << ( tmp_19_cast_reg_794 );
    sensitive << ( ret_V_5_reg_301 );

    SC_METHOD(thread_tmp_26_fu_492_p1);
    sensitive << ( x_V_reg_829 );

    SC_METHOD(thread_tmp_34_cast_fu_327_p1);
    sensitive << ( tmp_43_fu_317_p4 );

    SC_METHOD(thread_tmp_36_cast_fu_341_p1);
    sensitive << ( tmp_44_fu_331_p4 );

    SC_METHOD(thread_tmp_38_cast_fu_355_p1);
    sensitive << ( tmp_45_fu_345_p4 );

    SC_METHOD(thread_tmp_39_cast_fu_369_p1);
    sensitive << ( tmp_46_fu_359_p4 );

    SC_METHOD(thread_tmp_43_fu_317_p4);
    sensitive << ( beta_V );

    SC_METHOD(thread_tmp_44_fu_331_p4);
    sensitive << ( gamma_V );

    SC_METHOD(thread_tmp_45_fu_345_p4);
    sensitive << ( out_data_V );

    SC_METHOD(thread_tmp_46_fu_359_p4);
    sensitive << ( in_data_V );

    SC_METHOD(thread_tmp_48_fu_520_p1);
    sensitive << ( grp_fu_482_p2 );

    SC_METHOD(thread_tmp_fu_516_p1);
    sensitive << ( r_V_fu_512_p1 );

    SC_METHOD(thread_w_fu_413_p2);
    sensitive << ( i_op_assign_1_reg_233 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( gmem_RVALID );
    sensitive << ( gmem_BVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_408_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_429_p2 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( exitcond1_fu_545_p2 );
    sensitive << ( exitcond3_fu_393_p2 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );
    sensitive << ( ap_block_state63_io );
    sensitive << ( ap_sig_ioackin_gmem_WREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_reg_ioackin_gmem_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LayerNorm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, num_features_V, "num_features_V");
    sc_trace(mVcdFile, height_V, "height_V");
    sc_trace(mVcdFile, width_V, "width_V");
    sc_trace(mVcdFile, in_data_V, "in_data_V");
    sc_trace(mVcdFile, out_data_V, "out_data_V");
    sc_trace(mVcdFile, gamma_V, "gamma_V");
    sc_trace(mVcdFile, beta_V, "beta_V");
    sc_trace(mVcdFile, gmem_blk_n_AR, "gmem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, gmem_blk_n_R, "gmem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, gmem_blk_n_AW, "gmem_blk_n_AW");
    sc_trace(mVcdFile, gmem_blk_n_W, "gmem_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, gmem_blk_n_B, "gmem_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, width_V_read_reg_719, "width_V_read_reg_719");
    sc_trace(mVcdFile, height_V_read_reg_724, "height_V_read_reg_724");
    sc_trace(mVcdFile, num_features_V_read_reg_729, "num_features_V_read_reg_729");
    sc_trace(mVcdFile, tmp_34_cast_fu_327_p1, "tmp_34_cast_fu_327_p1");
    sc_trace(mVcdFile, tmp_34_cast_reg_735, "tmp_34_cast_reg_735");
    sc_trace(mVcdFile, tmp_36_cast_fu_341_p1, "tmp_36_cast_fu_341_p1");
    sc_trace(mVcdFile, tmp_36_cast_reg_740, "tmp_36_cast_reg_740");
    sc_trace(mVcdFile, tmp_38_cast_fu_355_p1, "tmp_38_cast_fu_355_p1");
    sc_trace(mVcdFile, tmp_38_cast_reg_745, "tmp_38_cast_reg_745");
    sc_trace(mVcdFile, tmp_39_cast_fu_369_p1, "tmp_39_cast_fu_369_p1");
    sc_trace(mVcdFile, tmp_39_cast_reg_750, "tmp_39_cast_reg_750");
    sc_trace(mVcdFile, rhs_V_fu_373_p1, "rhs_V_fu_373_p1");
    sc_trace(mVcdFile, rhs_V_reg_756, "rhs_V_reg_756");
    sc_trace(mVcdFile, rhs_V_1_cast_fu_381_p1, "rhs_V_1_cast_fu_381_p1");
    sc_trace(mVcdFile, rhs_V_1_cast_reg_761, "rhs_V_1_cast_reg_761");
    sc_trace(mVcdFile, p_tr4_fu_384_p1, "p_tr4_fu_384_p1");
    sc_trace(mVcdFile, p_tr4_reg_767, "p_tr4_reg_767");
    sc_trace(mVcdFile, next_mul1_fu_388_p2, "next_mul1_fu_388_p2");
    sc_trace(mVcdFile, next_mul1_reg_773, "next_mul1_reg_773");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, h_fu_398_p2, "h_fu_398_p2");
    sc_trace(mVcdFile, h_reg_781, "h_reg_781");
    sc_trace(mVcdFile, w_fu_413_p2, "w_fu_413_p2");
    sc_trace(mVcdFile, w_reg_789, "w_reg_789");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_19_cast_fu_425_p1, "tmp_19_cast_fu_425_p1");
    sc_trace(mVcdFile, tmp_19_cast_reg_794, "tmp_19_cast_reg_794");
    sc_trace(mVcdFile, exitcond2_fu_408_p2, "exitcond2_fu_408_p2");
    sc_trace(mVcdFile, c_fu_434_p2, "c_fu_434_p2");
    sc_trace(mVcdFile, c_reg_803, "c_reg_803");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, next_mul_fu_440_p2, "next_mul_fu_440_p2");
    sc_trace(mVcdFile, next_mul_reg_808, "next_mul_reg_808");
    sc_trace(mVcdFile, exitcond_fu_429_p2, "exitcond_fu_429_p2");
    sc_trace(mVcdFile, gmem_addr_reg_813, "gmem_addr_reg_813");
    sc_trace(mVcdFile, x_V_reg_829, "x_V_reg_829");
    sc_trace(mVcdFile, sum_V_fu_487_p2, "sum_V_fu_487_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, variance_V_reg_845, "variance_V_reg_845");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, rhs_V_1_fu_541_p1, "rhs_V_1_fu_541_p1");
    sc_trace(mVcdFile, rhs_V_1_reg_850, "rhs_V_1_reg_850");
    sc_trace(mVcdFile, c_1_fu_550_p2, "c_1_fu_550_p2");
    sc_trace(mVcdFile, c_1_reg_858, "c_1_reg_858");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, next_mul2_fu_560_p2, "next_mul2_fu_560_p2");
    sc_trace(mVcdFile, next_mul2_reg_863, "next_mul2_reg_863");
    sc_trace(mVcdFile, exitcond1_fu_545_p2, "exitcond1_fu_545_p2");
    sc_trace(mVcdFile, gmem_addr_1_reg_868, "gmem_addr_1_reg_868");
    sc_trace(mVcdFile, gmem_addr_2_reg_874, "gmem_addr_2_reg_874");
    sc_trace(mVcdFile, gmem_addr_3_reg_880, "gmem_addr_3_reg_880");
    sc_trace(mVcdFile, gmem_addr_4_reg_886, "gmem_addr_4_reg_886");
    sc_trace(mVcdFile, grp_sqrt_fixed_17_9_s_fu_312_ap_return, "grp_sqrt_fixed_17_9_s_fu_312_ap_return");
    sc_trace(mVcdFile, agg_result_V_i_reg_892, "agg_result_V_i_reg_892");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, x_V_1_reg_897, "x_V_1_reg_897");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, gmem_addr_2_read_reg_912, "gmem_addr_2_read_reg_912");
    sc_trace(mVcdFile, grp_fu_653_p2, "grp_fu_653_p2");
    sc_trace(mVcdFile, tmp_27_reg_917, "tmp_27_reg_917");
    sc_trace(mVcdFile, p_Val2_13_reg_922, "p_Val2_13_reg_922");
    sc_trace(mVcdFile, tmp_28_reg_927, "tmp_28_reg_927");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, i_op_assign_reg_210, "i_op_assign_reg_210");
    sc_trace(mVcdFile, ret_V_3_reg_221, "ret_V_3_reg_221");
    sc_trace(mVcdFile, i_op_assign_1_reg_233, "i_op_assign_1_reg_233");
    sc_trace(mVcdFile, exitcond3_fu_393_p2, "exitcond3_fu_393_p2");
    sc_trace(mVcdFile, p_Val2_4_reg_244, "p_Val2_4_reg_244");
    sc_trace(mVcdFile, p_Val2_6_reg_256, "p_Val2_6_reg_256");
    sc_trace(mVcdFile, i_op_assign_2_reg_268, "i_op_assign_2_reg_268");
    sc_trace(mVcdFile, ret_V_2_reg_279, "ret_V_2_reg_279");
    sc_trace(mVcdFile, i_op_assign_3_reg_290, "i_op_assign_3_reg_290");
    sc_trace(mVcdFile, ret_V_5_reg_301, "ret_V_5_reg_301");
    sc_trace(mVcdFile, in_data_V2_sum_cast_fu_459_p1, "in_data_V2_sum_cast_fu_459_p1");
    sc_trace(mVcdFile, in_data_V2_sum9_cast_fu_579_p1, "in_data_V2_sum9_cast_fu_579_p1");
    sc_trace(mVcdFile, gamma_V6_sum_cast_fu_594_p1, "gamma_V6_sum_cast_fu_594_p1");
    sc_trace(mVcdFile, beta_V8_sum_cast_fu_609_p1, "beta_V8_sum_cast_fu_609_p1");
    sc_trace(mVcdFile, out_data_V4_sum_cast_fu_624_p1, "out_data_V4_sum_cast_fu_624_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_ARREADY, "ap_reg_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_ARREADY, "ap_sig_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_AWREADY, "ap_sig_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_block_state63_io, "ap_block_state63_io");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_AWREADY, "ap_reg_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_WREADY, "ap_reg_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_WREADY, "ap_sig_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, tmp_43_fu_317_p4, "tmp_43_fu_317_p4");
    sc_trace(mVcdFile, tmp_44_fu_331_p4, "tmp_44_fu_331_p4");
    sc_trace(mVcdFile, tmp_45_fu_345_p4, "tmp_45_fu_345_p4");
    sc_trace(mVcdFile, tmp_46_fu_359_p4, "tmp_46_fu_359_p4");
    sc_trace(mVcdFile, ret_V_fu_685_p2, "ret_V_fu_685_p2");
    sc_trace(mVcdFile, i_op_assign_1_cast3_fu_404_p1, "i_op_assign_1_cast3_fu_404_p1");
    sc_trace(mVcdFile, tmp_19_fu_419_p2, "tmp_19_fu_419_p2");
    sc_trace(mVcdFile, tmp_20_fu_445_p2, "tmp_20_fu_445_p2");
    sc_trace(mVcdFile, tmp_20_cast_cast_fu_450_p1, "tmp_20_cast_cast_fu_450_p1");
    sc_trace(mVcdFile, in_data_V2_sum_fu_454_p2, "in_data_V2_sum_fu_454_p2");
    sc_trace(mVcdFile, grp_fu_473_p0, "grp_fu_473_p0");
    sc_trace(mVcdFile, grp_fu_482_p0, "grp_fu_482_p0");
    sc_trace(mVcdFile, grp_fu_692_p3, "grp_fu_692_p3");
    sc_trace(mVcdFile, grp_fu_473_p2, "grp_fu_473_p2");
    sc_trace(mVcdFile, r_V_fu_512_p1, "r_V_fu_512_p1");
    sc_trace(mVcdFile, grp_fu_482_p2, "grp_fu_482_p2");
    sc_trace(mVcdFile, tmp_48_fu_520_p1, "tmp_48_fu_520_p1");
    sc_trace(mVcdFile, grp_fu_701_p3, "grp_fu_701_p3");
    sc_trace(mVcdFile, tmp_24_fu_565_p2, "tmp_24_fu_565_p2");
    sc_trace(mVcdFile, tmp_24_cast_cast_fu_570_p1, "tmp_24_cast_cast_fu_570_p1");
    sc_trace(mVcdFile, in_data_V2_sum9_fu_574_p2, "in_data_V2_sum9_fu_574_p2");
    sc_trace(mVcdFile, lhs_V_3_cast_fu_556_p1, "lhs_V_3_cast_fu_556_p1");
    sc_trace(mVcdFile, gamma_V6_sum_fu_589_p2, "gamma_V6_sum_fu_589_p2");
    sc_trace(mVcdFile, beta_V8_sum_fu_604_p2, "beta_V8_sum_fu_604_p2");
    sc_trace(mVcdFile, out_data_V4_sum_fu_619_p2, "out_data_V4_sum_fu_619_p2");
    sc_trace(mVcdFile, lhs_V_3_fu_634_p1, "lhs_V_3_fu_634_p1");
    sc_trace(mVcdFile, ret_V_10_fu_637_p2, "ret_V_10_fu_637_p2");
    sc_trace(mVcdFile, grp_fu_653_p0, "grp_fu_653_p0");
    sc_trace(mVcdFile, grp_fu_653_p1, "grp_fu_653_p1");
    sc_trace(mVcdFile, normalized_V_fu_659_p1, "normalized_V_fu_659_p1");
    sc_trace(mVcdFile, grp_fu_710_p3, "grp_fu_710_p3");
    sc_trace(mVcdFile, ret_V_fu_685_p0, "ret_V_fu_685_p0");
    sc_trace(mVcdFile, ret_V_fu_685_p1, "ret_V_fu_685_p1");
    sc_trace(mVcdFile, grp_fu_692_p0, "grp_fu_692_p0");
    sc_trace(mVcdFile, tmp_26_fu_492_p1, "tmp_26_fu_492_p1");
    sc_trace(mVcdFile, grp_fu_692_p1, "grp_fu_692_p1");
    sc_trace(mVcdFile, grp_fu_692_p2, "grp_fu_692_p2");
    sc_trace(mVcdFile, grp_fu_701_p0, "grp_fu_701_p0");
    sc_trace(mVcdFile, tmp_fu_516_p1, "tmp_fu_516_p1");
    sc_trace(mVcdFile, grp_fu_701_p1, "grp_fu_701_p1");
    sc_trace(mVcdFile, grp_fu_701_p2, "grp_fu_701_p2");
    sc_trace(mVcdFile, grp_fu_710_p2, "grp_fu_710_p2");
    sc_trace(mVcdFile, grp_fu_473_ap_start, "grp_fu_473_ap_start");
    sc_trace(mVcdFile, grp_fu_473_ap_done, "grp_fu_473_ap_done");
    sc_trace(mVcdFile, grp_fu_482_ap_start, "grp_fu_482_ap_start");
    sc_trace(mVcdFile, grp_fu_482_ap_done, "grp_fu_482_ap_done");
    sc_trace(mVcdFile, grp_fu_653_ap_start, "grp_fu_653_ap_start");
    sc_trace(mVcdFile, grp_fu_653_ap_done, "grp_fu_653_ap_done");
    sc_trace(mVcdFile, grp_fu_653_ce, "grp_fu_653_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_653_p10, "grp_fu_653_p10");
    sc_trace(mVcdFile, ret_V_fu_685_p00, "ret_V_fu_685_p00");
    sc_trace(mVcdFile, ret_V_fu_685_p10, "ret_V_fu_685_p10");
#endif

    }
    mHdltvinHandle.open("LayerNorm.hdltvin.dat");
    mHdltvoutHandle.open("LayerNorm.hdltvout.dat");
}

LayerNorm::~LayerNorm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete LayerNorm_AXILiteS_s_axi_U;
    delete LayerNorm_gmem_m_axi_U;
    delete grp_sqrt_fixed_17_9_s_fu_312;
    delete LayerNorm_sdiv_17bkb_U2;
    delete LayerNorm_sdiv_17bkb_U3;
    delete LayerNorm_sdiv_25cud_U4;
    delete LayerNorm_mul_muldEe_U5;
    delete LayerNorm_mac_muleOg_U6;
    delete LayerNorm_mac_mulfYi_U7;
    delete LayerNorm_mac_muleOg_U8;
}

void LayerNorm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void LayerNorm::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void LayerNorm::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void LayerNorm::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void LayerNorm::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void LayerNorm::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void LayerNorm::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void LayerNorm::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv2_3;
}

void LayerNorm::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
              esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())))) {
            ap_reg_ioackin_gmem_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
            if (esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_AWREADY.read())) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_WREADY.read())) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_393_p2.read()))) {
        i_op_assign_1_reg_233 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_545_p2.read()))) {
        i_op_assign_1_reg_233 = w_reg_789.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_0))) {
        i_op_assign_2_reg_268 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_op_assign_2_reg_268 = c_reg_803.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        i_op_assign_3_reg_290 = c_1_reg_858.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        i_op_assign_3_reg_290 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_1))) {
        i_op_assign_reg_210 = h_reg_781.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_op_assign_reg_210 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_0))) {
        p_Val2_4_reg_244 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_Val2_4_reg_244 = sum_V_fu_487_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_0))) {
        p_Val2_6_reg_256 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_Val2_6_reg_256 = grp_fu_692_p3.read().range(23, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_0))) {
        ret_V_2_reg_279 = ap_const_lv48_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ret_V_2_reg_279 = next_mul_reg_808.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_1))) {
        ret_V_3_reg_221 = next_mul1_reg_773.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ret_V_3_reg_221 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        ret_V_5_reg_301 = next_mul2_reg_863.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        ret_V_5_reg_301 = ap_const_lv48_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        agg_result_V_i_reg_892 = grp_sqrt_fixed_17_9_s_fu_312_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        c_1_reg_858 = c_1_fu_550_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_reg_803 = c_fu_434_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_545_p2.read()))) {
        gmem_addr_1_reg_868 =  (sc_lv<32>) (in_data_V2_sum9_cast_fu_579_p1.read());
        gmem_addr_2_reg_874 =  (sc_lv<32>) (gamma_V6_sum_cast_fu_594_p1.read());
        gmem_addr_3_reg_880 =  (sc_lv<32>) (beta_V8_sum_cast_fu_609_p1.read());
        gmem_addr_4_reg_886 =  (sc_lv<32>) (out_data_V4_sum_cast_fu_624_p1.read());
        next_mul2_reg_863 = next_mul2_fu_560_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
        gmem_addr_2_read_reg_912 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_429_p2.read()))) {
        gmem_addr_reg_813 =  (sc_lv<32>) (in_data_V2_sum_cast_fu_459_p1.read());
        next_mul_reg_808 = next_mul_fu_440_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        h_reg_781 = h_fu_398_p2.read();
        next_mul1_reg_773 = next_mul1_fu_388_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        height_V_read_reg_724 = height_V.read();
        num_features_V_read_reg_729 = num_features_V.read();
        p_tr4_reg_767 = p_tr4_fu_384_p1.read();
        rhs_V_1_cast_reg_761 = rhs_V_1_cast_fu_381_p1.read();
        rhs_V_reg_756 = rhs_V_fu_373_p1.read();
        tmp_34_cast_reg_735 = tmp_34_cast_fu_327_p1.read();
        tmp_36_cast_reg_740 = tmp_36_cast_fu_341_p1.read();
        tmp_38_cast_reg_745 = tmp_38_cast_fu_355_p1.read();
        tmp_39_cast_reg_750 = tmp_39_cast_fu_369_p1.read();
        width_V_read_reg_719 = width_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
        p_Val2_13_reg_922 = gmem_RDATA.read();
        tmp_27_reg_917 = grp_fu_653_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        rhs_V_1_reg_850 = rhs_V_1_fu_541_p1.read();
        variance_V_reg_845 = grp_fu_701_p3.read().range(23, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_0))) {
        tmp_19_cast_reg_794 = tmp_19_cast_fu_425_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        tmp_28_reg_927 = grp_fu_710_p3.read().range(23, 8);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        w_reg_789 = w_fu_413_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
        x_V_1_reg_897 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
        x_V_reg_829 = gmem_RDATA.read();
    }
}

void LayerNorm::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void LayerNorm::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void LayerNorm::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void LayerNorm::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void LayerNorm::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void LayerNorm::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void LayerNorm::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void LayerNorm::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void LayerNorm::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void LayerNorm::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void LayerNorm::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void LayerNorm::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void LayerNorm::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void LayerNorm::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void LayerNorm::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void LayerNorm::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void LayerNorm::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void LayerNorm::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void LayerNorm::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void LayerNorm::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void LayerNorm::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void LayerNorm::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void LayerNorm::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void LayerNorm::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void LayerNorm::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void LayerNorm::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void LayerNorm::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void LayerNorm::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void LayerNorm::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void LayerNorm::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void LayerNorm::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void LayerNorm::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void LayerNorm::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void LayerNorm::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void LayerNorm::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void LayerNorm::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void LayerNorm::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void LayerNorm::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void LayerNorm::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void LayerNorm::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void LayerNorm::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void LayerNorm::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void LayerNorm::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[72];
}

void LayerNorm::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void LayerNorm::thread_ap_block_state63_io() {
    ap_block_state63_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_AWREADY.read()));
}

void LayerNorm::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_393_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void LayerNorm::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void LayerNorm::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_393_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void LayerNorm::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void LayerNorm::thread_ap_sig_ioackin_gmem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) {
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY.read();
    } else {
        ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1;
    }
}

void LayerNorm::thread_ap_sig_ioackin_gmem_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read())) {
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem_AWREADY = ap_const_logic_1;
    }
}

void LayerNorm::thread_ap_sig_ioackin_gmem_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read())) {
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY.read();
    } else {
        ap_sig_ioackin_gmem_WREADY = ap_const_logic_1;
    }
}

void LayerNorm::thread_beta_V8_sum_cast_fu_609_p1() {
    beta_V8_sum_cast_fu_609_p1 = esl_zext<64,32>(beta_V8_sum_fu_604_p2.read());
}

void LayerNorm::thread_beta_V8_sum_fu_604_p2() {
    beta_V8_sum_fu_604_p2 = (!tmp_34_cast_reg_735.read().is_01() || !lhs_V_3_cast_fu_556_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_34_cast_reg_735.read()) + sc_biguint<32>(lhs_V_3_cast_fu_556_p1.read()));
}

void LayerNorm::thread_c_1_fu_550_p2() {
    c_1_fu_550_p2 = (!i_op_assign_3_reg_290.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_op_assign_3_reg_290.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LayerNorm::thread_c_fu_434_p2() {
    c_fu_434_p2 = (!i_op_assign_2_reg_268.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_op_assign_2_reg_268.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LayerNorm::thread_exitcond1_fu_545_p2() {
    exitcond1_fu_545_p2 = (!i_op_assign_3_reg_290.read().is_01() || !num_features_V_read_reg_729.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_3_reg_290.read() == num_features_V_read_reg_729.read());
}

void LayerNorm::thread_exitcond2_fu_408_p2() {
    exitcond2_fu_408_p2 = (!i_op_assign_1_reg_233.read().is_01() || !width_V_read_reg_719.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_1_reg_233.read() == width_V_read_reg_719.read());
}

void LayerNorm::thread_exitcond3_fu_393_p2() {
    exitcond3_fu_393_p2 = (!i_op_assign_reg_210.read().is_01() || !height_V_read_reg_724.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_reg_210.read() == height_V_read_reg_724.read());
}

void LayerNorm::thread_exitcond_fu_429_p2() {
    exitcond_fu_429_p2 = (!i_op_assign_2_reg_268.read().is_01() || !num_features_V_read_reg_729.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_2_reg_268.read() == num_features_V_read_reg_729.read());
}

void LayerNorm::thread_gamma_V6_sum_cast_fu_594_p1() {
    gamma_V6_sum_cast_fu_594_p1 = esl_zext<64,32>(gamma_V6_sum_fu_589_p2.read());
}

void LayerNorm::thread_gamma_V6_sum_fu_589_p2() {
    gamma_V6_sum_fu_589_p2 = (!tmp_36_cast_reg_740.read().is_01() || !lhs_V_3_cast_fu_556_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_36_cast_reg_740.read()) + sc_biguint<32>(lhs_V_3_cast_fu_556_p1.read()));
}

void LayerNorm::thread_gmem_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
            gmem_ARADDR = gmem_addr_3_reg_880.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
            gmem_ARADDR = gmem_addr_2_reg_874.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
            gmem_ARADDR = gmem_addr_1_reg_868.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            gmem_ARADDR = gmem_addr_reg_813.read();
        } else {
            gmem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        gmem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void LayerNorm::thread_gmem_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())))) {
        gmem_ARVALID = ap_const_logic_1;
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void LayerNorm::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read()))) {
        gmem_AWVALID = ap_const_logic_1;
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void LayerNorm::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        gmem_BREADY = ap_const_logic_1;
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void LayerNorm::thread_gmem_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
          esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && 
          esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1)))) {
        gmem_RREADY = ap_const_logic_1;
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void LayerNorm::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read()))) {
        gmem_WVALID = ap_const_logic_1;
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void LayerNorm::thread_gmem_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        gmem_blk_n_AR = m_axi_gmem_ARREADY.read();
    } else {
        gmem_blk_n_AR = ap_const_logic_1;
    }
}

void LayerNorm::thread_gmem_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        gmem_blk_n_AW = m_axi_gmem_AWREADY.read();
    } else {
        gmem_blk_n_AW = ap_const_logic_1;
    }
}

void LayerNorm::thread_gmem_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        gmem_blk_n_B = m_axi_gmem_BVALID.read();
    } else {
        gmem_blk_n_B = ap_const_logic_1;
    }
}

void LayerNorm::thread_gmem_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()))) {
        gmem_blk_n_R = m_axi_gmem_RVALID.read();
    } else {
        gmem_blk_n_R = ap_const_logic_1;
    }
}

void LayerNorm::thread_gmem_blk_n_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        gmem_blk_n_W = m_axi_gmem_WREADY.read();
    } else {
        gmem_blk_n_W = ap_const_logic_1;
    }
}

void LayerNorm::thread_grp_fu_473_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_429_p2.read(), ap_const_lv1_1))) {
        grp_fu_473_ap_start = ap_const_logic_1;
    } else {
        grp_fu_473_ap_start = ap_const_logic_0;
    }
}

void LayerNorm::thread_grp_fu_473_p0() {
    grp_fu_473_p0 = esl_sext<17,16>(p_Val2_4_reg_244.read());
}

void LayerNorm::thread_grp_fu_482_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_429_p2.read(), ap_const_lv1_1))) {
        grp_fu_482_ap_start = ap_const_logic_1;
    } else {
        grp_fu_482_ap_start = ap_const_logic_0;
    }
}

void LayerNorm::thread_grp_fu_482_p0() {
    grp_fu_482_p0 = esl_sext<17,16>(p_Val2_6_reg_256.read());
}

void LayerNorm::thread_grp_fu_653_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_653_ap_start = ap_const_logic_1;
    } else {
        grp_fu_653_ap_start = ap_const_logic_0;
    }
}

void LayerNorm::thread_grp_fu_653_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()))) {
        grp_fu_653_ce = ap_const_logic_1;
    } else {
        grp_fu_653_ce = ap_const_logic_0;
    }
}

void LayerNorm::thread_grp_fu_653_p0() {
    grp_fu_653_p0 = esl_concat<17,8>(ret_V_10_fu_637_p2.read(), ap_const_lv8_0);
}

void LayerNorm::thread_grp_fu_653_p1() {
    grp_fu_653_p1 =  (sc_lv<14>) (grp_fu_653_p10.read());
}

void LayerNorm::thread_grp_fu_653_p10() {
    grp_fu_653_p10 = esl_zext<25,13>(agg_result_V_i_reg_892.read());
}

void LayerNorm::thread_grp_fu_692_p0() {
    grp_fu_692_p0 =  (sc_lv<16>) (tmp_26_fu_492_p1.read());
}

void LayerNorm::thread_grp_fu_692_p1() {
    grp_fu_692_p1 =  (sc_lv<16>) (tmp_26_fu_492_p1.read());
}

void LayerNorm::thread_grp_fu_692_p2() {
    grp_fu_692_p2 = esl_concat<16,8>(p_Val2_6_reg_256.read(), ap_const_lv8_0);
}

void LayerNorm::thread_grp_fu_701_p0() {
    grp_fu_701_p0 =  (sc_lv<16>) (tmp_fu_516_p1.read());
}

void LayerNorm::thread_grp_fu_701_p1() {
    grp_fu_701_p1 =  (sc_lv<16>) (tmp_fu_516_p1.read());
}

void LayerNorm::thread_grp_fu_701_p2() {
    grp_fu_701_p2 = esl_concat<16,8>(tmp_48_fu_520_p1.read(), ap_const_lv8_0);
}

void LayerNorm::thread_grp_fu_710_p2() {
    grp_fu_710_p2 = esl_concat<16,8>(p_Val2_13_reg_922.read(), ap_const_lv8_0);
}

void LayerNorm::thread_h_fu_398_p2() {
    h_fu_398_p2 = (!i_op_assign_reg_210.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_op_assign_reg_210.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LayerNorm::thread_i_op_assign_1_cast3_fu_404_p1() {
    i_op_assign_1_cast3_fu_404_p1 = esl_zext<32,16>(i_op_assign_1_reg_233.read());
}

void LayerNorm::thread_in_data_V2_sum9_cast_fu_579_p1() {
    in_data_V2_sum9_cast_fu_579_p1 = esl_zext<64,49>(in_data_V2_sum9_fu_574_p2.read());
}

void LayerNorm::thread_in_data_V2_sum9_fu_574_p2() {
    in_data_V2_sum9_fu_574_p2 = (!tmp_39_cast_reg_750.read().is_01() || !tmp_24_cast_cast_fu_570_p1.read().is_01())? sc_lv<49>(): (sc_biguint<49>(tmp_39_cast_reg_750.read()) + sc_biguint<49>(tmp_24_cast_cast_fu_570_p1.read()));
}

void LayerNorm::thread_in_data_V2_sum_cast_fu_459_p1() {
    in_data_V2_sum_cast_fu_459_p1 = esl_zext<64,49>(in_data_V2_sum_fu_454_p2.read());
}

void LayerNorm::thread_in_data_V2_sum_fu_454_p2() {
    in_data_V2_sum_fu_454_p2 = (!tmp_20_cast_cast_fu_450_p1.read().is_01() || !tmp_39_cast_reg_750.read().is_01())? sc_lv<49>(): (sc_biguint<49>(tmp_20_cast_cast_fu_450_p1.read()) + sc_biguint<49>(tmp_39_cast_reg_750.read()));
}

void LayerNorm::thread_lhs_V_3_cast_fu_556_p1() {
    lhs_V_3_cast_fu_556_p1 = esl_zext<32,16>(i_op_assign_3_reg_290.read());
}

void LayerNorm::thread_lhs_V_3_fu_634_p1() {
    lhs_V_3_fu_634_p1 = esl_sext<17,16>(x_V_1_reg_897.read());
}

void LayerNorm::thread_next_mul1_fu_388_p2() {
    next_mul1_fu_388_p2 = (!ret_V_3_reg_221.read().is_01() || !rhs_V_reg_756.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_3_reg_221.read()) + sc_biguint<32>(rhs_V_reg_756.read()));
}

void LayerNorm::thread_next_mul2_fu_560_p2() {
    next_mul2_fu_560_p2 = (!ret_V_5_reg_301.read().is_01() || !rhs_V_1_cast_reg_761.read().is_01())? sc_lv<48>(): (sc_biguint<48>(ret_V_5_reg_301.read()) + sc_biguint<48>(rhs_V_1_cast_reg_761.read()));
}

void LayerNorm::thread_next_mul_fu_440_p2() {
    next_mul_fu_440_p2 = (!rhs_V_1_cast_reg_761.read().is_01() || !ret_V_2_reg_279.read().is_01())? sc_lv<48>(): (sc_biguint<48>(rhs_V_1_cast_reg_761.read()) + sc_biguint<48>(ret_V_2_reg_279.read()));
}

void LayerNorm::thread_normalized_V_fu_659_p1() {
    normalized_V_fu_659_p1 = tmp_27_reg_917.read().range(16-1, 0);
}

void LayerNorm::thread_out_data_V4_sum_cast_fu_624_p1() {
    out_data_V4_sum_cast_fu_624_p1 = esl_zext<64,49>(out_data_V4_sum_fu_619_p2.read());
}

void LayerNorm::thread_out_data_V4_sum_fu_619_p2() {
    out_data_V4_sum_fu_619_p2 = (!tmp_38_cast_reg_745.read().is_01() || !tmp_24_cast_cast_fu_570_p1.read().is_01())? sc_lv<49>(): (sc_biguint<49>(tmp_38_cast_reg_745.read()) + sc_biguint<49>(tmp_24_cast_cast_fu_570_p1.read()));
}

void LayerNorm::thread_p_tr4_fu_384_p1() {
    p_tr4_fu_384_p1 = esl_zext<17,16>(num_features_V.read());
}

void LayerNorm::thread_r_V_fu_512_p1() {
    r_V_fu_512_p1 = grp_fu_473_p2.read().range(16-1, 0);
}

void LayerNorm::thread_ret_V_10_fu_637_p2() {
    ret_V_10_fu_637_p2 = (!lhs_V_3_fu_634_p1.read().is_01() || !rhs_V_1_reg_850.read().is_01())? sc_lv<17>(): (sc_bigint<17>(lhs_V_3_fu_634_p1.read()) - sc_bigint<17>(rhs_V_1_reg_850.read()));
}

void LayerNorm::thread_ret_V_fu_685_p0() {
    ret_V_fu_685_p0 =  (sc_lv<16>) (ret_V_fu_685_p00.read());
}

void LayerNorm::thread_ret_V_fu_685_p00() {
    ret_V_fu_685_p00 = esl_zext<32,16>(width_V.read());
}

void LayerNorm::thread_ret_V_fu_685_p1() {
    ret_V_fu_685_p1 =  (sc_lv<16>) (ret_V_fu_685_p10.read());
}

void LayerNorm::thread_ret_V_fu_685_p10() {
    ret_V_fu_685_p10 = esl_zext<32,16>(height_V.read());
}

void LayerNorm::thread_rhs_V_1_cast_fu_381_p1() {
    rhs_V_1_cast_fu_381_p1 = esl_zext<48,32>(ret_V_fu_685_p2.read());
}

void LayerNorm::thread_rhs_V_1_fu_541_p1() {
    rhs_V_1_fu_541_p1 = esl_sext<17,16>(r_V_fu_512_p1.read());
}

void LayerNorm::thread_rhs_V_fu_373_p1() {
    rhs_V_fu_373_p1 = esl_zext<32,16>(width_V.read());
}

void LayerNorm::thread_sum_V_fu_487_p2() {
    sum_V_fu_487_p2 = (!x_V_reg_829.read().is_01() || !p_Val2_4_reg_244.read().is_01())? sc_lv<16>(): (sc_bigint<16>(x_V_reg_829.read()) + sc_bigint<16>(p_Val2_4_reg_244.read()));
}

void LayerNorm::thread_tmp_19_cast_fu_425_p1() {
    tmp_19_cast_fu_425_p1 = esl_zext<48,32>(tmp_19_fu_419_p2.read());
}

void LayerNorm::thread_tmp_19_fu_419_p2() {
    tmp_19_fu_419_p2 = (!ret_V_3_reg_221.read().is_01() || !i_op_assign_1_cast3_fu_404_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_3_reg_221.read()) + sc_biguint<32>(i_op_assign_1_cast3_fu_404_p1.read()));
}

void LayerNorm::thread_tmp_20_cast_cast_fu_450_p1() {
    tmp_20_cast_cast_fu_450_p1 = esl_zext<49,48>(tmp_20_fu_445_p2.read());
}

void LayerNorm::thread_tmp_20_fu_445_p2() {
    tmp_20_fu_445_p2 = (!ret_V_2_reg_279.read().is_01() || !tmp_19_cast_reg_794.read().is_01())? sc_lv<48>(): (sc_biguint<48>(ret_V_2_reg_279.read()) + sc_biguint<48>(tmp_19_cast_reg_794.read()));
}

void LayerNorm::thread_tmp_24_cast_cast_fu_570_p1() {
    tmp_24_cast_cast_fu_570_p1 = esl_zext<49,48>(tmp_24_fu_565_p2.read());
}

void LayerNorm::thread_tmp_24_fu_565_p2() {
    tmp_24_fu_565_p2 = (!tmp_19_cast_reg_794.read().is_01() || !ret_V_5_reg_301.read().is_01())? sc_lv<48>(): (sc_biguint<48>(tmp_19_cast_reg_794.read()) + sc_biguint<48>(ret_V_5_reg_301.read()));
}

void LayerNorm::thread_tmp_26_fu_492_p1() {
    tmp_26_fu_492_p1 = esl_sext<24,16>(x_V_reg_829.read());
}

void LayerNorm::thread_tmp_34_cast_fu_327_p1() {
    tmp_34_cast_fu_327_p1 = esl_zext<32,31>(tmp_43_fu_317_p4.read());
}

void LayerNorm::thread_tmp_36_cast_fu_341_p1() {
    tmp_36_cast_fu_341_p1 = esl_zext<32,31>(tmp_44_fu_331_p4.read());
}

void LayerNorm::thread_tmp_38_cast_fu_355_p1() {
    tmp_38_cast_fu_355_p1 = esl_zext<49,31>(tmp_45_fu_345_p4.read());
}

void LayerNorm::thread_tmp_39_cast_fu_369_p1() {
    tmp_39_cast_fu_369_p1 = esl_zext<49,31>(tmp_46_fu_359_p4.read());
}

void LayerNorm::thread_tmp_43_fu_317_p4() {
    tmp_43_fu_317_p4 = beta_V.read().range(31, 1);
}

void LayerNorm::thread_tmp_44_fu_331_p4() {
    tmp_44_fu_331_p4 = gamma_V.read().range(31, 1);
}

void LayerNorm::thread_tmp_45_fu_345_p4() {
    tmp_45_fu_345_p4 = out_data_V.read().range(31, 1);
}

void LayerNorm::thread_tmp_46_fu_359_p4() {
    tmp_46_fu_359_p4 = in_data_V.read().range(31, 1);
}

void LayerNorm::thread_tmp_48_fu_520_p1() {
    tmp_48_fu_520_p1 = grp_fu_482_p2.read().range(16-1, 0);
}

void LayerNorm::thread_tmp_fu_516_p1() {
    tmp_fu_516_p1 = esl_sext<24,16>(r_V_fu_512_p1.read());
}

void LayerNorm::thread_w_fu_413_p2() {
    w_fu_413_p2 = (!i_op_assign_1_reg_233.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_op_assign_1_reg_233.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LayerNorm::thread_ap_NS_fsm() {
    if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_393_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_408_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_429_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state6;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state13;
        } else {
            ap_NS_fsm = ap_ST_fsm_state12;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_545_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state36;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state43;
        } else {
            ap_NS_fsm = ap_ST_fsm_state42;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(ap_block_state63_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state64;
        } else {
            ap_NS_fsm = ap_ST_fsm_state63;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state65;
        } else {
            ap_NS_fsm = ap_ST_fsm_state64;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state70;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state72;
        } else {
            ap_NS_fsm = ap_ST_fsm_state71;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_WREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state74;
        } else {
            ap_NS_fsm = ap_ST_fsm_state73;
        }
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,78,78>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state34;
        } else {
            ap_NS_fsm = ap_ST_fsm_state78;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<78>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void LayerNorm::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

