// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _BatchNorm_HH_
#define _BatchNorm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sqrt_fixed_17_9_s.h"
#include "BatchNorm_sdiv_25bkb.h"
#include "BatchNorm_mul_mulcud.h"
#include "BatchNorm_mac_muldEe.h"
#include "BatchNorm_AXILiteS_s_axi.h"
#include "BatchNorm_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct BatchNorm : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<2> > ap_var_for_const7;


    // Module declarations
    BatchNorm(sc_module_name name);
    SC_HAS_PROCESS(BatchNorm);

    ~BatchNorm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    BatchNorm_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* BatchNorm_AXILiteS_s_axi_U;
    BatchNorm_gmem_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* BatchNorm_gmem_m_axi_U;
    sqrt_fixed_17_9_s* grp_sqrt_fixed_17_9_s_fu_313;
    BatchNorm_sdiv_25bkb<1,29,25,14,16>* BatchNorm_sdiv_25bkb_U2;
    BatchNorm_mul_mulcud<1,1,16,24,40>* BatchNorm_mul_mulcud_U3;
    BatchNorm_mac_muldEe<1,1,16,16,24,24>* BatchNorm_mac_muldEe_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<57> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > num_features_V;
    sc_signal< sc_lv<16> > height_V;
    sc_signal< sc_lv<16> > width_V;
    sc_signal< sc_lv<32> > in_data_V;
    sc_signal< sc_lv<32> > out_data_V;
    sc_signal< sc_lv<32> > gamma_V;
    sc_signal< sc_lv<32> > beta_V;
    sc_signal< sc_lv<32> > running_mean_V;
    sc_signal< sc_lv<32> > running_var_V;
    sc_signal< sc_logic > gmem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > gmem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > gmem_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > gmem_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_logic > gmem_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<32> > gmem_ARADDR;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<16> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<16> > width_V_read_reg_660;
    sc_signal< sc_lv<16> > height_V_read_reg_665;
    sc_signal< sc_lv<8> > num_features_V_read_reg_670;
    sc_signal< sc_lv<32> > tmp_cast_fu_328_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_675;
    sc_signal< sc_lv<32> > tmp_34_cast_fu_342_p1;
    sc_signal< sc_lv<32> > tmp_34_cast_reg_680;
    sc_signal< sc_lv<32> > tmp_35_cast_fu_356_p1;
    sc_signal< sc_lv<32> > tmp_35_cast_reg_685;
    sc_signal< sc_lv<32> > tmp_36_cast_fu_370_p1;
    sc_signal< sc_lv<32> > tmp_36_cast_reg_690;
    sc_signal< sc_lv<41> > tmp_37_cast_fu_384_p1;
    sc_signal< sc_lv<41> > tmp_37_cast_reg_695;
    sc_signal< sc_lv<41> > tmp_38_cast_fu_398_p1;
    sc_signal< sc_lv<41> > tmp_38_cast_reg_700;
    sc_signal< sc_lv<24> > rhs_V_cast_fu_402_p1;
    sc_signal< sc_lv<24> > rhs_V_cast_reg_705;
    sc_signal< sc_lv<40> > rhs_V_1_cast_fu_406_p1;
    sc_signal< sc_lv<40> > rhs_V_1_cast_reg_710;
    sc_signal< sc_lv<32> > rhs_V_2_cast_fu_410_p1;
    sc_signal< sc_lv<32> > rhs_V_2_cast_reg_715;
    sc_signal< sc_lv<24> > next_mul1_fu_414_p2;
    sc_signal< sc_lv<24> > next_mul1_reg_721;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > c_fu_424_p2;
    sc_signal< sc_lv<8> > c_reg_729;
    sc_signal< sc_lv<32> > gmem_addr_reg_734;
    sc_signal< sc_lv<1> > exitcond2_fu_419_p2;
    sc_signal< sc_lv<32> > gmem_addr_1_reg_740;
    sc_signal< sc_lv<32> > gmem_addr_2_reg_746;
    sc_signal< sc_lv<32> > gmem_addr_3_reg_752;
    sc_signal< sc_lv<40> > ret_V_1_fu_646_p2;
    sc_signal< sc_lv<40> > ret_V_1_reg_758;
    sc_signal< sc_lv<32> > next_mul_fu_498_p2;
    sc_signal< sc_lv<32> > next_mul_reg_764;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > h_fu_508_p2;
    sc_signal< sc_lv<16> > h_reg_772;
    sc_signal< sc_lv<32> > gmem_addr_4_reg_777;
    sc_signal< sc_lv<1> > exitcond1_fu_503_p2;
    sc_signal< sc_lv<16> > w_fu_551_p2;
    sc_signal< sc_lv<16> > w_reg_786;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > gmem_addr_5_reg_791;
    sc_signal< sc_lv<1> > exitcond_fu_546_p2;
    sc_signal< sc_lv<16> > x_V_reg_797;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_ARREADY;
    sc_signal< sc_lv<16> > p_Val2_5_reg_802;
    sc_signal< sc_lv<17> > ret_V_5_fu_597_p2;
    sc_signal< sc_lv<17> > ret_V_5_reg_807;
    sc_signal< sc_lv<16> > p_Val2_7_reg_812;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<16> > gmem_addr_2_read_reg_827;
    sc_signal< sc_lv<16> > grp_fu_614_p2;
    sc_signal< sc_lv<16> > tmp_27_reg_832;
    sc_signal< sc_lv<16> > p_Val2_9_reg_837;
    sc_signal< sc_lv<16> > tmp_25_reg_842;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_lv<13> > grp_sqrt_fixed_17_9_s_fu_313_ap_return;
    sc_signal< sc_lv<8> > i_op_assign_reg_257;
    sc_signal< sc_lv<24> > ret_V_reg_268;
    sc_signal< sc_lv<16> > i_op_assign_1_reg_279;
    sc_signal< sc_lv<32> > ret_V_2_reg_290;
    sc_signal< sc_lv<16> > i_op_assign_2_reg_302;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > running_mean_V10_sum_1_fu_439_p1;
    sc_signal< sc_lv<64> > running_var_V12_sum_s_fu_454_p1;
    sc_signal< sc_lv<64> > gamma_V6_sum_cast_fu_469_p1;
    sc_signal< sc_lv<64> > beta_V8_sum_cast_fu_484_p1;
    sc_signal< sc_lv<64> > out_data_V4_sum_cast_fu_532_p1;
    sc_signal< sc_lv<64> > in_data_V2_sum1_cast_fu_581_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_WREADY;
    sc_signal< sc_lv<31> > tmp_fu_318_p4;
    sc_signal< sc_lv<31> > tmp_43_fu_332_p4;
    sc_signal< sc_lv<31> > tmp_44_fu_346_p4;
    sc_signal< sc_lv<31> > tmp_45_fu_360_p4;
    sc_signal< sc_lv<31> > tmp_46_fu_374_p4;
    sc_signal< sc_lv<31> > tmp_47_fu_388_p4;
    sc_signal< sc_lv<32> > tmp_cast_165_fu_430_p1;
    sc_signal< sc_lv<32> > running_mean_V10_sum_fu_434_p2;
    sc_signal< sc_lv<32> > running_var_V12_sum_fu_449_p2;
    sc_signal< sc_lv<32> > gamma_V6_sum_fu_464_p2;
    sc_signal< sc_lv<32> > beta_V8_sum_fu_479_p2;
    sc_signal< sc_lv<40> > tmp_24_fu_514_p1;
    sc_signal< sc_lv<40> > tmp_26_fu_518_p2;
    sc_signal< sc_lv<41> > tmp_28_cast_fu_523_p1;
    sc_signal< sc_lv<41> > out_data_V4_sum_fu_527_p2;
    sc_signal< sc_lv<32> > i_op_assign_2_cast3_fu_542_p1;
    sc_signal< sc_lv<32> > tmp1_fu_557_p2;
    sc_signal< sc_lv<40> > tmp1_cast_fu_563_p1;
    sc_signal< sc_lv<40> > tmp_19_fu_567_p2;
    sc_signal< sc_lv<41> > tmp_19_cast_cast_fu_572_p1;
    sc_signal< sc_lv<41> > in_data_V2_sum1_fu_576_p2;
    sc_signal< sc_lv<17> > lhs_V_fu_591_p1;
    sc_signal< sc_lv<17> > rhs_V_fu_594_p1;
    sc_signal< sc_lv<25> > grp_fu_614_p0;
    sc_signal< sc_lv<14> > grp_fu_614_p1;
    sc_signal< sc_lv<16> > normalized_V_fu_620_p1;
    sc_signal< sc_lv<24> > grp_fu_651_p3;
    sc_signal< sc_lv<16> > ret_V_1_fu_646_p0;
    sc_signal< sc_lv<24> > ret_V_1_fu_646_p1;
    sc_signal< sc_lv<24> > grp_fu_651_p2;
    sc_signal< sc_logic > grp_fu_614_ap_start;
    sc_signal< sc_logic > grp_fu_614_ap_done;
    sc_signal< sc_logic > grp_fu_614_ce;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_lv<57> > ap_NS_fsm;
    sc_signal< sc_lv<25> > grp_fu_614_p10;
    sc_signal< sc_lv<40> > ret_V_1_fu_646_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<57> ap_ST_fsm_state1;
    static const sc_lv<57> ap_ST_fsm_state2;
    static const sc_lv<57> ap_ST_fsm_state3;
    static const sc_lv<57> ap_ST_fsm_state4;
    static const sc_lv<57> ap_ST_fsm_state5;
    static const sc_lv<57> ap_ST_fsm_state6;
    static const sc_lv<57> ap_ST_fsm_state7;
    static const sc_lv<57> ap_ST_fsm_state8;
    static const sc_lv<57> ap_ST_fsm_state9;
    static const sc_lv<57> ap_ST_fsm_state10;
    static const sc_lv<57> ap_ST_fsm_state11;
    static const sc_lv<57> ap_ST_fsm_state12;
    static const sc_lv<57> ap_ST_fsm_state13;
    static const sc_lv<57> ap_ST_fsm_state14;
    static const sc_lv<57> ap_ST_fsm_state15;
    static const sc_lv<57> ap_ST_fsm_state16;
    static const sc_lv<57> ap_ST_fsm_state17;
    static const sc_lv<57> ap_ST_fsm_state18;
    static const sc_lv<57> ap_ST_fsm_state19;
    static const sc_lv<57> ap_ST_fsm_state20;
    static const sc_lv<57> ap_ST_fsm_state21;
    static const sc_lv<57> ap_ST_fsm_state22;
    static const sc_lv<57> ap_ST_fsm_state23;
    static const sc_lv<57> ap_ST_fsm_state24;
    static const sc_lv<57> ap_ST_fsm_state25;
    static const sc_lv<57> ap_ST_fsm_state26;
    static const sc_lv<57> ap_ST_fsm_state27;
    static const sc_lv<57> ap_ST_fsm_state28;
    static const sc_lv<57> ap_ST_fsm_state29;
    static const sc_lv<57> ap_ST_fsm_state30;
    static const sc_lv<57> ap_ST_fsm_state31;
    static const sc_lv<57> ap_ST_fsm_state32;
    static const sc_lv<57> ap_ST_fsm_state33;
    static const sc_lv<57> ap_ST_fsm_state34;
    static const sc_lv<57> ap_ST_fsm_state35;
    static const sc_lv<57> ap_ST_fsm_state36;
    static const sc_lv<57> ap_ST_fsm_state37;
    static const sc_lv<57> ap_ST_fsm_state38;
    static const sc_lv<57> ap_ST_fsm_state39;
    static const sc_lv<57> ap_ST_fsm_state40;
    static const sc_lv<57> ap_ST_fsm_state41;
    static const sc_lv<57> ap_ST_fsm_state42;
    static const sc_lv<57> ap_ST_fsm_state43;
    static const sc_lv<57> ap_ST_fsm_state44;
    static const sc_lv<57> ap_ST_fsm_state45;
    static const sc_lv<57> ap_ST_fsm_state46;
    static const sc_lv<57> ap_ST_fsm_state47;
    static const sc_lv<57> ap_ST_fsm_state48;
    static const sc_lv<57> ap_ST_fsm_state49;
    static const sc_lv<57> ap_ST_fsm_state50;
    static const sc_lv<57> ap_ST_fsm_state51;
    static const sc_lv<57> ap_ST_fsm_state52;
    static const sc_lv<57> ap_ST_fsm_state53;
    static const sc_lv<57> ap_ST_fsm_state54;
    static const sc_lv<57> ap_ST_fsm_state55;
    static const sc_lv<57> ap_ST_fsm_state56;
    static const sc_lv<57> ap_ST_fsm_state57;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_5;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem_ARREADY();
    void thread_ap_sig_ioackin_gmem_AWREADY();
    void thread_ap_sig_ioackin_gmem_WREADY();
    void thread_beta_V8_sum_cast_fu_484_p1();
    void thread_beta_V8_sum_fu_479_p2();
    void thread_c_fu_424_p2();
    void thread_exitcond1_fu_503_p2();
    void thread_exitcond2_fu_419_p2();
    void thread_exitcond_fu_546_p2();
    void thread_gamma_V6_sum_cast_fu_469_p1();
    void thread_gamma_V6_sum_fu_464_p2();
    void thread_gmem_ARADDR();
    void thread_gmem_ARVALID();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WVALID();
    void thread_gmem_blk_n_AR();
    void thread_gmem_blk_n_AW();
    void thread_gmem_blk_n_B();
    void thread_gmem_blk_n_R();
    void thread_gmem_blk_n_W();
    void thread_grp_fu_614_ap_start();
    void thread_grp_fu_614_ce();
    void thread_grp_fu_614_p0();
    void thread_grp_fu_614_p1();
    void thread_grp_fu_614_p10();
    void thread_grp_fu_651_p2();
    void thread_h_fu_508_p2();
    void thread_i_op_assign_2_cast3_fu_542_p1();
    void thread_in_data_V2_sum1_cast_fu_581_p1();
    void thread_in_data_V2_sum1_fu_576_p2();
    void thread_lhs_V_fu_591_p1();
    void thread_next_mul1_fu_414_p2();
    void thread_next_mul_fu_498_p2();
    void thread_normalized_V_fu_620_p1();
    void thread_out_data_V4_sum_cast_fu_532_p1();
    void thread_out_data_V4_sum_fu_527_p2();
    void thread_ret_V_1_fu_646_p0();
    void thread_ret_V_1_fu_646_p1();
    void thread_ret_V_1_fu_646_p10();
    void thread_ret_V_5_fu_597_p2();
    void thread_rhs_V_1_cast_fu_406_p1();
    void thread_rhs_V_2_cast_fu_410_p1();
    void thread_rhs_V_cast_fu_402_p1();
    void thread_rhs_V_fu_594_p1();
    void thread_running_mean_V10_sum_1_fu_439_p1();
    void thread_running_mean_V10_sum_fu_434_p2();
    void thread_running_var_V12_sum_fu_449_p2();
    void thread_running_var_V12_sum_s_fu_454_p1();
    void thread_tmp1_cast_fu_563_p1();
    void thread_tmp1_fu_557_p2();
    void thread_tmp_19_cast_cast_fu_572_p1();
    void thread_tmp_19_fu_567_p2();
    void thread_tmp_24_fu_514_p1();
    void thread_tmp_26_fu_518_p2();
    void thread_tmp_28_cast_fu_523_p1();
    void thread_tmp_34_cast_fu_342_p1();
    void thread_tmp_35_cast_fu_356_p1();
    void thread_tmp_36_cast_fu_370_p1();
    void thread_tmp_37_cast_fu_384_p1();
    void thread_tmp_38_cast_fu_398_p1();
    void thread_tmp_43_fu_332_p4();
    void thread_tmp_44_fu_346_p4();
    void thread_tmp_45_fu_360_p4();
    void thread_tmp_46_fu_374_p4();
    void thread_tmp_47_fu_388_p4();
    void thread_tmp_cast_165_fu_430_p1();
    void thread_tmp_cast_fu_328_p1();
    void thread_tmp_fu_318_p4();
    void thread_w_fu_551_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
