

================================================================
== Vivado HLS Report for 'gamma'
================================================================
* Date:           Tue Oct 15 13:32:07 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        gamma
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    7|  526|    7|  526|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+---------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |   Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+---------+----------+
        |- Loop 1  |    0|  519|        12|          2|          1| 0 ~ 255 |    yes   |
        +----------+-----+-----+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 1
  Pipeline-0 : II = 2, D = 12, States = { 3 4 5 6 7 8 9 10 11 12 13 14 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	15  / (exitcond)
	4  / (!exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	3  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 20 [1/1] (1.00ns)   --->   "%output_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %output_V)"   --->   Operation 20 'read' 'output_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%mlp_output_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %mlp_output_V)"   --->   Operation 21 'read' 'mlp_output_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 22 [1/1] (1.00ns)   --->   "%gamma_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %gamma_V)"   --->   Operation 22 'read' 'gamma_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 23 [1/1] (1.00ns)   --->   "%dim_V_read = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %dim_V)"   --->   Operation 23 'read' 'dim_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%output_V5 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %output_V_read, i32 1, i32 31)"   --->   Operation 24 'partselect' 'output_V5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp = zext i31 %output_V5 to i64"   --->   Operation 25 'zext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i16* %gmem, i64 %tmp"   --->   Operation 26 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_2 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %mlp_output_V_read, i32 1, i32 31)"   --->   Operation 27 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %gamma_V_read, i32 1, i32 31)"   --->   Operation 28 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_3_cast7 = zext i31 %tmp_2 to i32"   --->   Operation 29 'zext' 'tmp_3_cast7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i31 %tmp_3 to i32"   --->   Operation 30 'zext' 'tmp_4_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %gmem), !map !46"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %dim_V), !map !52"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @gamma_str) nounwind"   --->   Operation 33 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %gmem, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i64 4294967295, [5 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:3]   --->   Operation 34 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %gamma_V, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i64 4294967295, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:3]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %mlp_output_V, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i64 4294967295, [1 x i8]* @bundle2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:4]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %output_V, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i64 4294967295, [1 x i8]* @bundle4, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:5]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %dim_V, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:6]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:7]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_7 = zext i8 %dim_V_read to i32"   --->   Operation 40 'zext' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (8.75ns)   --->   "%gmem_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %gmem_addr, i32 %tmp_7)" [../src/gamma/gamma.cpp:11]   --->   Operation 41 'writereq' 'gmem_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 42 [1/1] (0.46ns)   --->   "br label %1" [../src/gamma/gamma.cpp:9]   --->   Operation 42 'br' <Predicate = true> <Delay = 0.46>

State 3 <SV = 2> <Delay = 2.11>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%i_op_assign = phi i8 [ 0, %0 ], [ %i, %_ZN8ap_fixedILi16ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi32ELi16ELb1ELS0_5ELS1_3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit ]"   --->   Operation 43 'phi' 'i_op_assign' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (1.31ns)   --->   "%exitcond = icmp eq i8 %i_op_assign, %dim_V_read" [../src/gamma/gamma.cpp:9]   --->   Operation 44 'icmp' 'exitcond' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 255, i64 0)"   --->   Operation 45 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.30ns)   --->   "%i = add i8 %i_op_assign, 1" [../src/gamma/gamma.cpp:9]   --->   Operation 46 'add' 'i' <Predicate = true> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %2, label %_ZN8ap_fixedILi16ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi32ELi16ELb1ELS0_5ELS1_3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit" [../src/gamma/gamma.cpp:9]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i8 %i_op_assign to i32" [../src/gamma/gamma.cpp:11]   --->   Operation 48 'zext' 'tmp_2_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.87ns)   --->   "%gamma_V2_sum = add i32 %tmp_2_cast, %tmp_4_cast" [../src/gamma/gamma.cpp:11]   --->   Operation 49 'add' 'gamma_V2_sum' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%gamma_V2_sum_cast = zext i32 %gamma_V2_sum to i64" [../src/gamma/gamma.cpp:11]   --->   Operation 50 'zext' 'gamma_V2_sum_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i16* %gmem, i64 %gamma_V2_sum_cast" [../src/gamma/gamma.cpp:11]   --->   Operation 51 'getelementptr' 'gmem_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (1.87ns)   --->   "%mlp_output_V4_sum = add i32 %tmp_2_cast, %tmp_3_cast7" [../src/gamma/gamma.cpp:11]   --->   Operation 52 'add' 'mlp_output_V4_sum' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%mlp_output_V4_sum_ca = zext i32 %mlp_output_V4_sum to i64" [../src/gamma/gamma.cpp:11]   --->   Operation 53 'zext' 'mlp_output_V4_sum_ca' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i16* %gmem, i64 %mlp_output_V4_sum_ca" [../src/gamma/gamma.cpp:11]   --->   Operation 54 'getelementptr' 'gmem_addr_2' <Predicate = (!exitcond)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 55 [7/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 55 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 56 [6/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 56 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 57 [7/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 57 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 58 [5/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 58 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 59 [6/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 59 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 60 [4/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 60 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 61 [5/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 61 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 62 [3/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 62 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 63 [4/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 63 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 64 [2/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 64 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 65 [3/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 65 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 66 [1/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_1, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 66 'readreq' 'gmem_load_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 67 [2/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 67 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 68 [1/1] (8.75ns)   --->   "%gmem_addr_1_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %gmem_addr_1)" [../src/gamma/gamma.cpp:11]   --->   Operation 68 'read' 'gmem_addr_1_read' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 69 [1/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %gmem_addr_2, i32 1)" [../src/gamma/gamma.cpp:11]   --->   Operation 69 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 70 [1/1] (8.75ns)   --->   "%gmem_addr_2_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %gmem_addr_2)" [../src/gamma/gamma.cpp:11]   --->   Operation 70 'read' 'gmem_addr_2_read' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 5.55>
ST_13 : Operation 71 [1/1] (0.00ns)   --->   "%r_V_cast = sext i16 %gmem_addr_1_read to i24" [../src/gamma/gamma.cpp:11]   --->   Operation 71 'sext' 'r_V_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_13 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_3_cast = sext i16 %gmem_addr_2_read to i24" [../src/gamma/gamma.cpp:11]   --->   Operation 72 'sext' 'tmp_3_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_13 : Operation 73 [1/1] (5.55ns) (root node of the DSP)   --->   "%r_V = mul i24 %tmp_3_cast, %r_V_cast" [../src/gamma/gamma.cpp:11]   --->   Operation 73 'mul' 'r_V' <Predicate = (!exitcond)> <Delay = 5.55> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_5 = call i16 @_ssdm_op_PartSelect.i16.i24.i32.i32(i24 %r_V, i32 8, i32 23)" [../src/gamma/gamma.cpp:11]   --->   Operation 74 'partselect' 'tmp_5' <Predicate = (!exitcond)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [../src/gamma/gamma.cpp:9]   --->   Operation 75 'specregionbegin' 'tmp_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_14 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [../src/gamma/gamma.cpp:10]   --->   Operation 76 'specpipeline' <Predicate = (!exitcond)> <Delay = 0.00>
ST_14 : Operation 77 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %gmem_addr, i16 %tmp_5, i2 -1)" [../src/gamma/gamma.cpp:11]   --->   Operation 77 'write' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 78 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_1)" [../src/gamma/gamma.cpp:12]   --->   Operation 78 'specregionend' 'empty_6' <Predicate = (!exitcond)> <Delay = 0.00>
ST_14 : Operation 79 [1/1] (0.00ns)   --->   "br label %1" [../src/gamma/gamma.cpp:9]   --->   Operation 79 'br' <Predicate = (!exitcond)> <Delay = 0.00>

State 15 <SV = 3> <Delay = 8.75>
ST_15 : Operation 80 [5/5] (8.75ns)   --->   "%gmem_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %gmem_addr)" [../src/gamma/gamma.cpp:11]   --->   Operation 80 'writeresp' 'gmem_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 4> <Delay = 8.75>
ST_16 : Operation 81 [4/5] (8.75ns)   --->   "%gmem_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %gmem_addr)" [../src/gamma/gamma.cpp:11]   --->   Operation 81 'writeresp' 'gmem_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 5> <Delay = 8.75>
ST_17 : Operation 82 [3/5] (8.75ns)   --->   "%gmem_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %gmem_addr)" [../src/gamma/gamma.cpp:11]   --->   Operation 82 'writeresp' 'gmem_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 6> <Delay = 8.75>
ST_18 : Operation 83 [2/5] (8.75ns)   --->   "%gmem_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %gmem_addr)" [../src/gamma/gamma.cpp:11]   --->   Operation 83 'writeresp' 'gmem_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 7> <Delay = 8.75>
ST_19 : Operation 84 [1/5] (8.75ns)   --->   "%gmem_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %gmem_addr)" [../src/gamma/gamma.cpp:11]   --->   Operation 84 'writeresp' 'gmem_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 85 [1/1] (0.00ns)   --->   "ret void" [../src/gamma/gamma.cpp:13]   --->   Operation 85 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'output_V' [6]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [27]  (8.75 ns)

 <State 3>: 2.11ns
The critical path consists of the following:
	'icmp' operation ('exitcond', ../src/gamma/gamma.cpp:9) [31]  (1.31 ns)
	blocking operation 0.8 ns on control path)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (../src/gamma/gamma.cpp:11) [42]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (../src/gamma/gamma.cpp:11) [43]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (../src/gamma/gamma.cpp:11) [49]  (8.75 ns)

 <State 13>: 5.55ns
The critical path consists of the following:
	'mul' operation of DSP[51] ('r.V', ../src/gamma/gamma.cpp:11) [51]  (5.55 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus write on port 'gmem' (../src/gamma/gamma.cpp:11) [53]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (../src/gamma/gamma.cpp:11) [57]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (../src/gamma/gamma.cpp:11) [57]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (../src/gamma/gamma.cpp:11) [57]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (../src/gamma/gamma.cpp:11) [57]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (../src/gamma/gamma.cpp:11) [57]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
